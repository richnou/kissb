package provide kotlin 1.0
package require coursier

namespace eval kotlin {

    set tcFolder ".kb/toolchain/kotlin"
    set baseBuildFolder ".kb/build/kotlin"
    #set baseBuildFolder ".kb/build/kotlin"

    set kotlinVersion "2.0.0"

    proc _buildirForModule module {
        return [kiss::vars::get kotlin.compiler.buildDir]/$module/classes
    }

    proc init module {

        coursier::fetchAll $module {
            + org.jetbrains.kotlin:kotlin-stdlib:${kotlin::kotlinVersion}
        }
    }

    proc compile module {

        set outputFolder $kotlin::baseBuildFolder/$module/classes
        file mkdir $outputFolder

        set sources [kiss::sources::getSources $module]
        log.info "Kotlin Compiling $sources for module $module"
        if {[llength $sources] == 0} {
            log.warn "No sources to compile"
            return 
        }
        #log.info "Deps: [kiss::dependencies::getDeps $module]"
        #set cpString [join  [kiss::dependencies::getDeps $module] ":"]
        #log.info "Dep string: $cpString"

        set depsList [kiss::dependencies::resolveDeps $module lib]
        set cpString [join $depsList [kiss::files::pathSeparator]]

        set args [concat [kiss::vars::get kotlin.compiler.args] [kiss::vars::get ${module}.kotlin.compiler.args]]
        log.info "Compile args: $args"

        ## Write command to file
        kiss::files::writeText $kotlin::baseBuildFolder/${module}.kotlinargs "$sources \
                                    -classpath $cpString \
                                    -d [_buildirForModule $module] \
                                    $args"

        #exit 0
        kiss::utils::execIn $kotlin::baseBuildFolder $kotlin::tcFolder/kotlinc/bin/kotlinc @$kotlin::baseBuildFolder/${module}.kotlinargs
        #kiss::utils::execIn [pwd] $kotlin::tcFolder/kotlinc/bin/kotlinc \
                                    {*}$sources \
                                    -classpath $cpString \
                                    -d [_buildirForModule $module] \
                                    {*}$args

        log.success "Done compiling"

    }

    proc assemble {module outputName} {

        set compileFolder $kotlin::baseBuildFolder/$module/classes

        set sources [kiss::sources::getSources $module]
        puts "Assembling Compiling $sources for module $module"

        set deps [kiss::dependencies::getDeps $module]
        puts "Dependencies: $deps"

        kiss::utils::execIn [pwd] $kotlin::tcFolder/kotlinc/bin/kotlinc $sources -cp $deps -include-runtime -d $outputName.jar

    }

    proc run {module class} {

        log.info "Compiling and running $module main class $class"

        # Compile
        compile $module

        # Run
        set cp [concat [_buildirForModule $module] [kiss::dependencies::resolveDeps $module lib]]
        kiss::utils::execIn [pwd] java -cp [join $cp [kiss::files::pathSeparator]] $class
    }

    ## On Load
    ###########
    kiss::toolchain::register kotlin-2 {
        #puts "Testing Toolchain Init"

        kiss::toolchain::init coursier

        set  ::kotlin::tcFolder [file normalize ".kb/toolchain/kotlin"]
        file mkdir $::kotlin::tcFolder

        set kotlin::baseBuildFolder [file normalize $kotlin::baseBuildFolder]
        file mkdir $::kotlin::baseBuildFolder

        #if {[file exists ]}
        #puts "Downloading"
        if {![file exists $::kotlin::tcFolder/kotlinc/bin/kotlinc]} {
            kiss::utils::download https://github.com/JetBrains/kotlin/releases/download/v2.0.0/kotlin-compiler-2.0.0.zip $::kotlin::tcFolder/kotlinc.zip
            if {[kiss::utils::isWindows]} { 
                kiss::utils::execIn ${::kotlin::tcFolder} powershell -command "Expand-Archive kotlinc.zip -DestinationPath ."
            } else {
                kiss::utils::execIn $::kotlin::tcFolder unzip  kotlinc.zip
            }
            
        } else {
            puts "Kotlin TC ready"
        }

        ## Setup args
        kiss::vars::append kotlin.home $::kotlin::tcFolder/kotlinc
        kiss::vars::append kotlin.compiler.args -kotlin-home      $::kotlin::tcFolder/kotlinc
        kiss::vars::append kotlin.compiler.args -language-version 2.0
        kiss::vars::append kotlin.compiler.args -Xenable-incremental-compilation

        kiss::vars::append kotlin.compiler.buildDir $::kotlin::baseBuildFolder
    }


    ## Build Server Output
    ####################
    namespace eval buildserver {

        proc generate {module args} {
            log.info "Generating Kotlin Build Server Config"

            set bsFile $::kotlin::baseBuildFolder/build.$module.json

            kiss::json::write $bsFile [subst {
                toolchain "kotlin-2"
                platform "jvm"
                module $module
                env {
                    kotlin.home "$::kotlin::tcFolder/kotlinc"
                }
                buildDirectory [kiss::vars::get kotlin.compiler.buildDir]/$module/classes
                args:: [list [concat [kiss::vars::get kotlin.compiler.args] [kiss::vars::get ${module}.kotlin.compiler.args]]]

                sources:: [list [kiss::sources::getSources $module]]

                classpath  [list [kiss::dependencies::getDeps $module]]
            }]
        }
    }
}