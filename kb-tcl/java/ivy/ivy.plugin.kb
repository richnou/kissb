# SPDX-FileCopyrightText: 2024 KISSB
#
# SPDX-License-Identifier: Apache-2.0

package provide kissb.ivy 1.0
package require kissb.xml


namespace eval ivy {

    set tcFolder ".kb/toolchain/ivy"
    set version 2.5.2
    set outputFolder "repository"

    set binPath ""

    vars.define ivy2.local.directory $::env(HOME)/.ivy2/local

    ## On Load -> Toolchain
    ###########
    kiss::toolchain::register ivy {
        puts "Init ivy Toolchain"

        set tcFolder ".kb/toolchain/ivy"
        file mkdir $tcFolder

        #https://dlcdn.apache.org//ant/ivy/2.5.2/apache-ivy-2.5.2-bin.tar.gz
        set url "https://dlcdn.apache.org//ant/ivy/2.5.2/apache-ivy-${ivy::version}-bin.tar.gz"

        #if {[file exists ]}
        set ivy::binPath [file normalize $tcFolder/apache-ivy-${ivy::version}/ivy-${ivy::version}.jar]

        if {![file exists ${ivy::binPath}]} {
            puts "Downloading"
            kiss::utils::download $url $tcFolder/ivy.tar.gz
            kiss::utils::execIn $tcFolder tar xvzf ivy.tar.gz
        } else {
            puts "Ivy TC ready"
        }
    }

    ## Fetch
    ##############
    set currentDeps {}
    proc + dep {
        set outFolder [uplevel {set outFolder}]
        #puts "Getting to $outFolder"
        lappend ivy::currentDeps $dep
        ivy::runtime::fetchSingle $outFolder org.apache.commons commons-lang3 3.14.0
    }
    proc fetchAll {module deps} {

        set outFolder ${ivy::tcFolder}/repository/$module
        file mkdir $outFolder

        ## Load deps
        eval $deps


    }

    ## Runtime
    namespace eval runtime {

        proc fetchSingle {cache org module rev} {
            kiss::utils::execIn $cache java -jar ${ivy::binPath} -dependency $org $module $rev -cache ./ -makepom out.pom
        }
    }


    kissb.extension ivy {

        generate.ivyFile {ivyFile spec} {

            set ivyFile [file normalize $ivyFile]

            set specSubst [uplevel [list subst $spec]]

            ## Create Writer and go through spec
            ##<ivy-module version="2.0"
             ##           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              ##          xsi:noNamespaceSchemaLocation=
               ##                "http://ant.apache.org/ivy/schemas/ivy.xsd">
             ## <info organisation="myorg"
              ##      module="mymodule"/>
            ##</ivy-module>
            files.withWriter $ivyFile {



                files.writer.printLine <?xml version="1.0" encoding="UTF-8"?>
                files.writer.printLine <ivy-module version="2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ant.apache.org/ivy/schemas/ivy.xsd">

                #files.writer.printLine <info module=>/

                files.writer.indent


                xml.toFileWriter $specSubst

                files.writer.outdent
                files.writer.printLine </ivy-module>


            }

        }

        installIvyLocal {artifactId groupId version jar deps} {

            ## Copy to output dir
            #######
            set jar [file normalize $jar]
            set groupIdPath [string map {. /} $groupId]
            log.info "Installing $jar to ivy local ${::ivy2.local.directory}/${groupId}/$artifactId/$version"
            files.inDirectory ${::ivy2.local.directory}/${groupId}/$artifactId/$version {

                files.mkdir ivys
                files.mkdir jars
                files.cp $jar jars/$artifactId.jar
                ivy.generate.ivyFile ivys/ivy.xml {

                    info {
                        @organisation   $groupId
                        @module         $artifactId
                        @revision       $version
                    }

                }

            }

        }

    }


}
